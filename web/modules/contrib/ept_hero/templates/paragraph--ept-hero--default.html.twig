{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use  to print them all,
 *   or print a subset such as .
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('ept_hero/ept_hero') }}

{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  'ept-paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'ept-paragraph',
  'ept-hero',
  'ept-basic-button',
  'paragraph-id-' ~ paragraph.id(),
  content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.styles,
  'image-position-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.image_position,
  'hero-style-' ~ content.field_ept_settings['#object'].field_ept_settings.ept_settings.styles,
]
%}

{{ attach_library('ept_basic_button/ept_basic_button_view') }}
{{ attach_library('ept_hero/common') }}
{% if content.field_ept_settings['#object'].field_ept_settings.ept_settings.styles %}
  {{ attach_library('ept_hero/' ~ content.field_ept_settings['#object'].field_ept_settings.ept_settings.styles) }}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.add_nofollow is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.add_nofollow == 1 %}
  {% set nofollow = ' rel="nofollow"' %}
{% else %}
  {% set nofollow = '' %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.open_in_new_tab is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.open_in_new_tab == 1 %}
  {% set target = ' target="_blank"' %}
{% else %}
  {% set target = '' %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.alignment %}
  {% set classes = classes|merge(['ept-align-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.alignment]) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.shape %}
  {% set classes = classes|merge(['ept-shape-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.shape]) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.size %}
  {% set classes = classes|merge(['ept-size-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.size]) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.stetched is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.stetched == 1 %}
  {% set classes = classes|merge(['ept-stretched']) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.stretched is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.stretched == 1 %}
  {% set classes = classes|merge(['ept-stretched']) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.custom_class_name is not empty %}
  {% set button_custom_classes = content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.custom_class_name %}
{% endif %}


{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.add_nofollow is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.add_nofollow == 1 %}
  {% set button2_nofollow = ' rel="nofollow"' %}
{% else %}
  {% set button2_nofollow = '' %}
{% endif %}

{%
  set button2_classes = []
%}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.open_in_new_tab is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.open_in_new_tab == 1 %}
  {% set button2_target = ' target="_blank"' %}
{% else %}
  {% set button2_target = '' %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.alignment %}
  {% set button2_classes = button2_classes|merge(['ept-align-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.alignment]) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.shape %}
  {% set button2_classes = button2_classes|merge(['ept-shape-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.shape]) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.size %}
  {% set button2_classes = button2_classes|merge(['ept-size-' ~ content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.size]) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.stetched is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.stetched == 1 %}
  {% set button2_classes = button2_classes|merge(['ept-stretched']) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.stretched is not empty and content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.stretched == 1 %}
  {% set button2_classes = button2_classes|merge(['ept-stretched']) %}
{% endif %}

{% if content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.custom_class_name is not empty %}
  {% set button2_custom_classes = content.field_ept_settings['#object'].field_ept_settings.0.ept_settings.link_options2.custom_class_name %}
{% endif %}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    <div class="bg-inner"></div>
    <div class="ept-container">
      <div class="ept-hero-container">
        <div class="hero-col-1">
          {{ content.field_ept_hero_column_image }}
        </div>
        <div class="hero-col-2">
          {{ content.field_ept_hero_title_prefix }}
          {{ content.field_ept_title }}
          {{ content.field_ept_text }}
          <div class="buttons">
            {% if content.field_ept_hero_link|render %}
            <div class="cta-button-wrapper">
              <span class="ept-basic-button-wrapper">
                <a href="{{ content.field_ept_hero_link.0['#url'] }}" class="ept-basic-button {{ button_custom_classes }}" {{ nofollow|raw }} {{ target|raw }}>
                  {{ content.field_ept_hero_link.0['#title'] }}
                </a>
              </span>
            </div>
            {% endif %}
            {% if content.field_ept_hero_second_link|render %}
            <div class="cta-button-wrapper ept-button2-wrapper {{ button2_classes|join(' ') }}">
              <span class="ept-basic-button2-wrapper">
                <a href="{{ content.field_ept_hero_second_link.0['#url'] }}"
                   class="ept-basic-button2 {{ button2_custom_classes }}"
                  {{ button2_nofollow|raw }}
                  {{ button2_target|raw }}>
                  {{ content.field_ept_hero_second_link.0['#title'] }}
                </a>
              </span>
            </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock paragraph %}
{{ styles|raw }}
{{ button_styles|raw }}
{{ hero_styles|raw }}

