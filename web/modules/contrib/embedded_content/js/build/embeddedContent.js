!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.embeddedContent=n())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/embeddedContent/src/command.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ InsertEmbeddedContentCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./js/ckeditor5_plugins/embeddedContent/src/utils.js");\n// eslint-disable-next-line import/no-unresolved\n\n\n\nclass InsertEmbeddedContentCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute(attributes, element) {\n    const { model } = this.editor;\n    const embeddedContentEditing = this.editor.plugins.get(\n      \'embeddedContentEditing\',\n    );\n\n    const dataAttributeMapping = Object.fromEntries(\n      Object.entries(embeddedContentEditing.attrs).map(([key, value]) => [\n        value,\n        key,\n      ]),\n    );\n\n    // \\Drupal\\embedded_content\\Form\\EmbeddedContentDialog returns data in keyed by\n    // data-attributes used in view data. This converts data-attribute keys to\n    // keys used in model.\n    const modelAttributes = Object.fromEntries(\n      Object.keys(dataAttributeMapping)\n        .filter((attribute) => attributes[attribute])\n        .map((attribute) => [\n          dataAttributeMapping[attribute],\n          attributes[attribute],\n        ]),\n    );\n\n    model.change((writer) => {\n      model.insertContent(\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.createEmbeddedContent)(writer, modelAttributes, element),\n      );\n    });\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/command.js?')},"./js/ckeditor5_plugins/embeddedContent/src/editing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EmbeddedContentEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./js/ckeditor5_plugins/embeddedContent/src/command.js\");\n// eslint-disable-next-line import/no-unresolved\n\n// eslint-disable-next-line import/no-unresolved\n\n\n\nclass EmbeddedContentEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.Widget];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  init() {\n    this.attrs = {\n      dataPluginConfig: 'data-plugin-config',\n      dataPluginId: 'data-plugin-id',\n      dataButtonId: 'data-button-id',\n    };\n    const options = this.editor.config.get('embeddedContent');\n    if (!options) {\n      throw new Error(\n        'Error on initializing embeddedContent plugin: embeddedContent config is required.',\n      );\n    }\n    this.options = options;\n    this.labelError = Drupal.t('Preview failed');\n    this.previewError = `\n      <p>${Drupal.t(\n        'An error occurred while trying to preview the embedded content. Please save your work and reload this page.',\n      )}<p>\n    `;\n\n    this._defineSchema();\n    this._defineConverters();\n    this.editor.commands.add(\n      'insertEmbeddedContent',\n      new _command__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.editor),\n    );\n  }\n\n  /**\n   * Registers drupalEntity as a block element in the DOM.\n   *\n   * @private\n   */\n  _defineSchema() {\n    const { schema } = this.editor.model;\n\n    schema.register('embeddedContent', {\n      isObject: true,\n      isContent: true,\n      isBlock: true,\n      allowWhere: '$block',\n      allowAttributes: Object.keys(this.attrs),\n    });\n    schema.register('embeddedContentInline', {\n      isObject: true,\n      isContent: true,\n      isBlock: true,\n      isInline: true,\n      allowWhere: '$text',\n      allowAttributes: Object.keys(this.attrs),\n    });\n\n    this.editor.editing.view.domConverter.blockElements.push(\n      'embedded-content',\n    );\n    this.editor.editing.view.domConverter.blockElements.push(\n      'embedded-content-inline',\n    );\n  }\n\n  /**\n   * Defines handling of drupal media element in the content lifecycle.\n   *\n   * @private\n   */\n  _defineConverters() {\n    const { conversion } = this.editor;\n\n    const displayTypeMapping = {\n      'embedded-content': 'embeddedContent',\n      'embedded-content-inline': 'embeddedContentInline',\n    };\n\n    Object.entries(displayTypeMapping).forEach(([viewName, modelName]) => {\n      conversion.for('upcast').elementToElement({\n        view: {\n          name: viewName,\n        },\n        model: modelName,\n      });\n\n      conversion.for('dataDowncast').elementToElement({\n        model: modelName,\n        view: {\n          name: viewName,\n        },\n      });\n      conversion.for('dataDowncast').elementToElement({\n        model: modelName,\n        view: {\n          name: viewName,\n        },\n      });\n      conversion\n        .for('editingDowncast')\n        .elementToElement({\n          model: modelName,\n          view: (modelElement, { writer }) => {\n            const container = writer.createContainerElement('figure', {\n              class: `embedded-content-preview-wrapper ${viewName}`,\n            });\n            writer.setCustomProperty('embeddedContent', true, container);\n            return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.toWidget)(container, writer, {\n              label: Drupal.t('Embedded content'),\n            });\n          },\n        })\n        .add((dispatcher) => {\n          const converter = (event, data, conversionApi) => {\n            const viewWriter = conversionApi.writer;\n            const modelElement = data.item;\n            const container = conversionApi.mapper.toViewElement(data.item);\n            const embeddedContent = viewWriter.createRawElement('span', {\n              'data-embedded-content-preview': 'loading',\n              class: `embedded-content-preview ${viewName}`,\n            });\n            viewWriter.insert(\n              viewWriter.createPositionAt(container, 0),\n              embeddedContent,\n            );\n            this._fetchPreview(modelElement).then((preview) => {\n              if (!embeddedContent) {\n                return;\n              }\n              this.editor.editing.view.change((writer) => {\n                const renderFunction = (domElement) => {\n                  domElement.innerHTML = preview;\n                };\n                const embeddedContentPreview = writer.createRawElement(\n                  'span',\n                  {\n                    class: `embedded-content-preview ${viewName}`,\n                    'data-embedded-content-preview': 'ready',\n                  },\n                  renderFunction,\n                );\n                writer.insert(\n                  writer.createPositionBefore(embeddedContent),\n                  embeddedContentPreview,\n                );\n                writer.remove(embeddedContent);\n              });\n            });\n          };\n          dispatcher.on(`attribute:dataPluginId:${modelName}`, converter);\n          return dispatcher;\n        });\n\n      Object.keys(this.attrs).forEach((modelKey) => {\n        const attributeMapping = {\n          model: {\n            key: modelKey,\n            name: modelName,\n          },\n          view: {\n            name: viewName,\n            key: this.attrs[modelKey],\n          },\n        };\n        conversion.for('dataDowncast').attributeToAttribute(attributeMapping);\n        conversion.for('upcast').attributeToAttribute(attributeMapping);\n      });\n    });\n  }\n\n  /**\n   * Fetches the preview.\n   *\n   * @param {HTMLElement} modelElement\n   *   The model element.\n   */\n  async _fetchPreview(modelElement) {\n    const config = {\n      plugin_id: modelElement.getAttribute('dataPluginId'),\n      plugin_config: modelElement.getAttribute('dataPluginConfig'),\n      editor_id: this.editor.id,\n    };\n    const response = await fetch(this.options.previewUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(config),\n    });\n    if (response.ok) {\n      return response.text();\n    }\n\n    return this.themeError;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return 'embeddedContentEditing';\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/editing.js?")},"./js/ckeditor5_plugins/embeddedContent/src/embeddedcontent.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ EmbeddedContent)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _editing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editing */ "./js/ckeditor5_plugins/embeddedContent/src/editing.js");\n/* harmony import */ var _toolbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toolbar */ "./js/ckeditor5_plugins/embeddedContent/src/toolbar.js");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui */ "./js/ckeditor5_plugins/embeddedContent/src/ui.js");\n// eslint-disable-next-line import/no-unresolved\n\n\n\n\n\nclass EmbeddedContent extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    static get requires()\n    {\n        return [_editing__WEBPACK_IMPORTED_MODULE_1__["default"], _ui__WEBPACK_IMPORTED_MODULE_3__["default"], _toolbar__WEBPACK_IMPORTED_MODULE_2__["default"]];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    static get pluginName()\n    {\n        return \'EmbeddedContent\';\n    }\n}\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/embeddedcontent.js?')},"./js/ckeditor5_plugins/embeddedContent/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _embeddedcontent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./embeddedcontent */ "./js/ckeditor5_plugins/embeddedContent/src/embeddedcontent.js");\n/**\n * @module entity-embed\n */\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    EmbeddedContent: _embeddedcontent__WEBPACK_IMPORTED_MODULE_0__["default"],\n});\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/index.js?')},"./js/ckeditor5_plugins/embeddedContent/src/toolbar.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EmbeddedContentToolbar)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./js/ckeditor5_plugins/embeddedContent/src/utils.js\");\n// eslint-disable-next-line import/no-unresolved\n\n// eslint-disable-next-line import/no-unresolved\n\n// eslint-disable-next-line import/no-unresolved\n\n\n\nclass EmbeddedContentToolbar extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.WidgetToolbarRepository];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  init() {\n    const { editor } = this;\n    const options = editor.config.get('embeddedContent');\n\n    editor.ui.componentFactory.add('embeddedContentEdit', (locale) => {\n      const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_2__.ButtonView(locale);\n\n      buttonView.set({\n        label: editor.t('Edit'),\n        icon: ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.icons.pencil,\n        tooltip: true,\n        class: 'ck-button_embedded-content__edit',\n      });\n\n      this.listenTo(buttonView, 'execute', () => {\n        const selectedElement =\n          editor.model.document.selection.getSelectedElement();\n\n        // Support embedded content created by ckeditor5_embedded_content\n        // that doesn't have a dataButtonId attribute.\n        const buttonId = selectedElement.getAttribute('dataButtonId') ?? 'default';\n        const button = options.buttons[buttonId];\n        button.editor_id = editor.id;\n        const existingValues = {\n          plugin_id: selectedElement.getAttribute('dataPluginId'),\n          plugin_config: selectedElement.getAttribute('dataPluginConfig'),\n          editor_id: editor.id,\n        };\n\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.openDialog)(\n          button,\n          ({ attributes, element }) => {\n            editor.execute('insertEmbeddedContent', attributes, element);\n            editor.editing.view.focus();\n          },\n          existingValues,\n        );\n      });\n\n      return buttonView;\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  afterInit() {\n    const { editor } = this;\n    if (!editor.plugins.has('WidgetToolbarRepository')) {\n      return;\n    }\n    const widgetToolbarRepository = editor.plugins.get(ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.WidgetToolbarRepository);\n\n    widgetToolbarRepository.register('embeddedContent', {\n      ariaLabel: Drupal.t('EmbeddedContent toolbar'),\n      items: ['embeddedContentEdit'],\n      getRelatedElement(selection) {\n        const viewElement = selection.getSelectedElement();\n        if (!viewElement) {\n          return null;\n        }\n        if (!(0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.isWidget)(viewElement)) {\n          return null;\n        }\n        if (!viewElement.getCustomProperty('embeddedContent')) {\n            return null\n        }\n\n        return viewElement;\n      },\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return 'EmbeddedContentToolbar';\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/toolbar.js?")},"./js/ckeditor5_plugins/embeddedContent/src/ui.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EmbeddedContentUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./js/ckeditor5_plugins/embeddedContent/src/utils.js\");\n/**\n * @file Registers the entity embed button(s) to the CKEditor instance(s) and binds functionality to it/them.\n */\n// eslint-disable-next-line import/no-unresolved\n\n// eslint-disable-next-line import/no-unresolved\n\n\n\nclass EmbeddedContentUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return ['Widget'];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  init() {\n    const { editor } = this;\n    const command = editor.commands.get('insertEmbeddedContent');\n\n    const options = editor.config.get('embeddedContent');\n    if (!options) {\n      return;\n    }\n    const { buttons } = options;\n\n    // Register each embed button to the toolbar based on configuration.\n    Object.keys(buttons).forEach((id) => {\n      editor.ui.componentFactory.add(`embeddedContent__${id}`, (locale) => {\n        const button = buttons[id];\n        const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n        buttonView.set({\n          label: button.label,\n          icon: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getSvg)(button.iconUrl),\n          tooltip: true,\n          class: `ck-button_embedded-content, ck-button_embedded-content__${id}`,\n        });\n        const dialogSettings = button.dialogSettings || {};\n        button.editor_id = editor.id;\n        dialogSettings.editor_id = editor.id;\n        const callback = () => {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_2__.openDialog)(button, ({ attributes, element }) => {\n            editor.execute('insertEmbeddedContent', attributes, element);\n          },\n            dialogSettings,\n          );\n        };\n        buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n        this.listenTo(buttonView, 'execute', callback);\n        return buttonView;\n      });\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return 'EmbeddedContentUI';\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/ui.js?")},"./js/ckeditor5_plugins/embeddedContent/src/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmbeddedContent: () => (/* binding */ createEmbeddedContent),\n/* harmony export */   getSvg: () => (/* binding */ getSvg),\n/* harmony export */   openDialog: () => (/* binding */ openDialog)\n/* harmony export */ });\nconst openDialog = (button, saveCallback, existingValues) => {\n    const ckeditorAjaxDialog = Drupal.ajax(\n        {\n            dialog: {\n                width: button.dialogSettings.width,\n                height: button.dialogSettings.height,\n                class: button.class,\n            },\n            dialogType:\n            button.dialogSettings.renderer === 'off_canvas' ? 'dialog' : 'modal',\n            dialogRenderer:\n            button.dialogSettings.renderer === 'off_canvas' ? 'off_canvas' : null,\n            selector: button.dialogSettings.selector,\n            url: button.dialogUrl,\n            progress: { type: 'fullscreen' },\n            submit: existingValues,\n        }\n    );\n  ckeditorAjaxDialog.execute();\n\n  // Store the save callback to be executed when this dialog is closed.\n\n  // We already take into account the possibility of supporting multiple modals.\n  // @see https://www.drupal.org/project/drupal/issues/2741877\n  if (Drupal.ckeditor5.saveCallback instanceof Map) {\n    Drupal.ckeditor5.saveCallback.set('#embedded-content-dialog-form-' + button.editor_id, saveCallback);\n  } else {\n    Drupal.ckeditor5.saveCallback = saveCallback;\n  }\n};\n\nconst getSvg = (url) => {\n    const xmlHttp = new XMLHttpRequest();\n    xmlHttp.open('GET', url, false);\n    xmlHttp.send();\n    return xmlHttp.responseText;\n};\n\nconst createEmbeddedContent = (writer, attributes, element) => {\n    return writer.createElement(element, attributes);\n};\n\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/./js/ckeditor5_plugins/embeddedContent/src/utils.js?")},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.embeddedContent/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/embeddedContent/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));